// Generated by CoffeeScript 2.5.1
var AR, Button, SCALE, buttons, draw, getLocalCoords, mouseClicked, mouseMoved, setup;

buttons = {};

SCALE = 3;

AR = 1.5; // Aspect Ratio


// Löser problemet! Transformeringar behöver inte skötas!
// Alternativ som fungerar lika bra, men kräver mer kod.
// https://www.reddit.com/r/p5js/comments/jo7ucf/clicking_on_a_translated_scaled_and_rotated_shape/
getLocalCoords = function() { // tar 3 microsekunder
  var matrix, pd;
  matrix = drawingContext.getTransform();
  pd = pixelDensity();
  return matrix.inverse().transformPoint(new DOMPoint(mouseX * pd, mouseY * pd));
};

setup = function() {
  createCanvas(SCALE * 100, SCALE * 150);
  rectMode(CENTER);
  angleMode(DEGREES);
  textAlign(CENTER, CENTER);
  // procent
  buttons.left = new Button('left', 50, AR * 22, 100, AR * 44, 'white');
  buttons.pause = new Button('pause', 25, AR * 50, 50, AR * 12, 'white');
  buttons.edit = new Button('edit', 75, AR * 50, 50, AR * 12, 'white');
  buttons.right = new Button('right', 50, AR * 78, 100, AR * 44, 'white');
  return buttons.left.inverted = true;
};

draw = function() {
  background('black');
  scale(SCALE);
  strokeWeight(1 / SCALE);
  buttons.pause.draw();
  buttons.edit.draw();
  buttons.right.draw();
  return buttons.left.draw();
};

mouseClicked = function() {
  var button, key, results, x, y;
  ({x, y} = getLocalCoords());
  console.log(x, y);
  results = [];
  for (key in buttons) {
    button = buttons[key];
    if (button.inside(x, y)) {
      results.push(console.log('Clicked', key, x, y));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

Button = class Button {
  constructor(text1, x1, y1, w, h, bg) {
    this.text = text1;
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.bg = bg;
    this.inverted = false;
  }

  draw() {
    fill(this.bg);
    rect(this.x, this.y, this.w, this.h);
    fill('black');
    if (this.inverted) {
      push();
      translate(this.x, this.y); // tillbaka till origo
      rotate(180); // vänd
      translate(-this.x, -this.y); // tillbaka till x,y
      text(this.text, this.x, this.y);
      return pop();
    } else {
      return text(this.text, this.x, this.y);
    }
  }

  inside(x, y) {
    var ref, ref1;
    return (-this.w / 2 <= (ref = x - this.x) && ref <= this.w / 2) && (-this.h / 2 <= (ref1 = y - this.y) && ref1 <= this.h / 2);
  }

};

mouseMoved = function() {
  var button, key, results, x, y;
  ({x, y} = getLocalCoords());
  results = [];
  for (key in buttons) {
    button = buttons[key];
    results.push(button.bg = button.inside(x, y) ? 'red' : 'white');
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW91c2VUcmFuc2Zvcm0uanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcTW91c2VUcmFuc2Zvcm0uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLEVBQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsY0FBQSxFQUFBLFlBQUEsRUFBQSxVQUFBLEVBQUE7O0FBQUEsT0FBQSxHQUFVLENBQUE7O0FBQ1YsS0FBQSxHQUFROztBQUNSLEVBQUEsR0FBSyxJQUZMOzs7Ozs7QUFRQSxjQUFBLEdBQWlCLFFBQUEsQ0FBQSxDQUFBLEVBQUE7QUFDakIsTUFBQSxNQUFBLEVBQUE7RUFBQyxNQUFBLEdBQVMsY0FBYyxDQUFDLFlBQWYsQ0FBQTtFQUNULEVBQUEsR0FBSyxZQUFBLENBQUE7U0FDTCxNQUFNLENBQUMsT0FBUCxDQUFBLENBQWdCLENBQUMsY0FBakIsQ0FBZ0MsSUFBSSxRQUFKLENBQWEsTUFBQSxHQUFTLEVBQXRCLEVBQXlCLE1BQUEsR0FBUyxFQUFsQyxDQUFoQztBQUhnQjs7QUFLakIsS0FBQSxHQUFRLFFBQUEsQ0FBQSxDQUFBO0VBQ1AsWUFBQSxDQUFhLEtBQUEsR0FBTSxHQUFuQixFQUF1QixLQUFBLEdBQU0sR0FBN0I7RUFDQSxRQUFBLENBQVMsTUFBVDtFQUNBLFNBQUEsQ0FBVSxPQUFWO0VBQ0EsU0FBQSxDQUFVLE1BQVYsRUFBaUIsTUFBakIsRUFIRDs7RUFNQyxPQUFPLENBQUMsSUFBUixHQUFnQixJQUFJLE1BQUosQ0FBVyxNQUFYLEVBQW1CLEVBQW5CLEVBQXNCLEVBQUEsR0FBRyxFQUF6QixFQUE0QixHQUE1QixFQUFnQyxFQUFBLEdBQUcsRUFBbkMsRUFBc0MsT0FBdEM7RUFDaEIsT0FBTyxDQUFDLEtBQVIsR0FBZ0IsSUFBSSxNQUFKLENBQVcsT0FBWCxFQUFtQixFQUFuQixFQUFzQixFQUFBLEdBQUcsRUFBekIsRUFBNkIsRUFBN0IsRUFBZ0MsRUFB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SUFBaUIsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFwQixDQUFBLElBQTBCLENBQUEsQ0FBQyxJQUFDLENBQUEsQ0FBRixHQUFJLENBQUosWUFBUyxDQUFBLEdBQUUsSUFBQyxDQUFBLEVBQVosUUFBQSxJQUFpQixJQUFDLENBQUEsQ0FBRCxHQUFHLENBQXBCO0VBQW5DOztBQWhCVjs7QUFrQkEsVUFBQSxHQUFhLFFBQUEsQ0FBQSxDQUFBO0FBQ2IsTUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUE7RUFBQyxDQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQSxHQUFRLGNBQUEsQ0FBQSxDQUFSO0FBQ0E7RUFBQSxLQUFBLGNBQUE7SUFDQyxNQUFBLEdBQVMsT0FBTyxDQUFDLEdBQUQ7aUJBQ2hCLE1BQU0sQ0FBQyxFQUFQLEdBQWUsTUFBTSxDQUFDLE1BQVAsQ0FBYyxDQUFkLEVBQWlCLENBQWpCLENBQUgsR0FBNEIsS0FBNUIsR0FBdUM7RUFGcEQsQ0FBQTs7QUFGWSIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbnMgPSB7fVxyXG5TQ0FMRSA9IDNcclxuQVIgPSAxLjUgIyBBc3BlY3QgUmF0aW9cclxuXHJcbiMgTMO2c2VyIHByb2JsZW1ldCEgVHJhbnNmb3JtZXJpbmdhciBiZWjDtnZlciBpbnRlIHNrw7Z0YXMhXHJcbiMgQWx0ZXJuYXRpdiBzb20gZnVuZ2VyYXIgbGlrYSBicmEsIG1lbiBrcsOkdmVyIG1lciBrb2QuXHJcbiMgaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL3A1anMvY29tbWVudHMvam83dWNmL2NsaWNraW5nX29uX2FfdHJhbnNsYXRlZF9zY2FsZWRfYW5kX3JvdGF0ZWRfc2hhcGUvXHJcblxyXG5nZXRMb2NhbENvb3JkcyA9IC0+ICMgdGFyIDMgbWljcm9zZWt1bmRlclxyXG5cdG1hdHJpeCA9IGRyYXdpbmdDb250ZXh0LmdldFRyYW5zZm9ybSgpXHJcblx0cGQgPSBwaXhlbERlbnNpdHkoKVxyXG5cdG1hdHJpeC5pbnZlcnNlKCkudHJhbnNmb3JtUG9pbnQgbmV3IERPTVBvaW50IG1vdXNlWCAqIHBkLG1vdXNlWSAqIHBkXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIFNDQUxFKjEwMCxTQ0FMRSoxNTBcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHRhbmdsZU1vZGUgREVHUkVFU1xyXG5cdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblxyXG5cdCMgcHJvY2VudFxyXG5cdGJ1dHRvbnMubGVmdCAgPSBuZXcgQnV0dG9uICdsZWZ0JywgNTAsQVIqMjIsMTAwLEFSKjQ0LCd3aGl0ZSdcclxuXHRidXR0b25zLnBhdXNlID0gbmV3IEJ1dHRvbiAncGF1c2UnLDI1LEFSKjUwLCA1MCxBUioxMiwnd2hpdGUnXHJcblx0YnV0dG9ucy5lZGl0ICA9IG5ldyBCdXR0b24gJ2VkaXQnLCA3NSxBUio1MCwgNTAsQVIqMTIsJ3doaXRlJ1xyXG5cdGJ1dHRvbnMucmlnaHQgPSBuZXcgQnV0dG9uICdyaWdodCcsNTAsQVIqNzgsMTAwLEFSKjQ0LCd3aGl0ZSdcclxuXHJcblx0YnV0dG9ucy5sZWZ0LmludmVydGVkID0gdHJ1ZVxyXG5cclxuZHJhdyA9IC0+IFxyXG5cdGJhY2tncm91bmQgJ2JsYWNrJ1xyXG5cdHNjYWxlIFNDQUxFXHJcblx0c3Ryb2tlV2VpZ2h0IDEvU0NBTEVcclxuXHRidXR0b25zLnBhdXNlLmRyYXcoKVxyXG5cdGJ1dHRvbnMuZWRpdC5kcmF3KClcclxuXHRidXR0b25zLnJpZ2h0LmRyYXcoKVxyXG5cdGJ1dHRvbnMubGVmdC5kcmF3KClcclxuXHJcbm1vdXNlQ2xpY2tlZCA9IC0+XHJcblx0e3gseX0gPSBnZXRMb2NhbENvb3JkcygpXHJcblx0Y29uc29sZS5sb2cgeCx5XHJcblx0Zm9yIGtleSBvZiBidXR0b25zXHJcblx0XHRidXR0b24gPSBidXR0b25zW2tleV1cclxuXHRcdGlmIGJ1dHRvbi5pbnNpZGUoeCx5KSB0aGVuIGNvbnNvbGUubG9nICdDbGlja2VkJyxrZXkseCx5XHJcblxyXG5jbGFzcyBCdXR0b25cclxuXHRjb25zdHJ1Y3RvciA6IChAdGV4dCxAeCxAeSxAdyxAaCxAYmcpIC0+XHJcblx0XHRAaW52ZXJ0ZWQgPSBmYWxzZVxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0ZmlsbCBAYmdcclxuXHRcdHJlY3QgQHgsQHksQHcsQGhcclxuXHRcdGZpbGwgJ2JsYWNrJ1xyXG5cdFx0aWYgQGludmVydGVkXHJcblx0XHRcdHB1c2goKVxyXG5cdFx0XHR0cmFuc2xhdGUgQHgsQHkgIyB0aWxsYmFrYSB0aWxsIG9yaWdvXHJcblx0XHRcdHJvdGF0ZSAxODAgICMgdsOkbmRcclxuXHRcdFx0dHJhbnNsYXRlIC1AeCwtQHkgIyB0aWxsYmFrYSB0aWxsIHgseVxyXG5cdFx0XHR0ZXh0IEB0ZXh0LEB4LEB5XHJcblx0XHRcdHBvcCgpXHJcblx0XHRlbHNlXHJcblx0XHRcdHRleHQgQHRleHQsQHgsQHlcclxuXHRpbnNpZGUgOiAoeCx5KSAtPiAtQHcvMiA8PSB4LUB4IDw9IEB3LzIgYW5kIC1AaC8yIDw9IHktQHkgPD0gQGgvMlxyXG5cclxubW91c2VNb3ZlZCA9IC0+XHJcblx0e3gseX0gPSBnZXRMb2NhbENvb3JkcygpXHJcblx0Zm9yIGtleSBvZiBidXR0b25zXHJcblx0XHRidXR0b24gPSBidXR0b25zW2tleV1cclxuXHRcdGJ1dHRvbi5iZyA9IGlmIGJ1dHRvbi5pbnNpZGUoeCwgeSkgdGhlbiAncmVkJyBlbHNlICd3aGl0ZSciXX0=
//# sourceURL=c:\github\Transformer\coffee\MouseTransform.coffee
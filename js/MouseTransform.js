// Generated by CoffeeScript 2.5.1
var Button, buttons, draw, getLocalCoords, mouseClicked, mouseMoved, setup;

buttons = {};

// Löser problemet! Transformeringar behöver inte skötas!
// Alternativ som fungerar lika bra, men kräver mer kod.
// https://www.reddit.com/r/p5js/comments/jo7ucf/clicking_on_a_translated_scaled_and_rotated_shape/
getLocalCoords = function() { // tar 3 microsekunder
  var matrix, pd;
  matrix = drawingContext.getTransform();
  pd = pixelDensity();
  return matrix.inverse().transformPoint(new DOMPoint(mouseX * pd, mouseY * pd));
};

setup = function() {
  var canvas;
  canvas = createCanvas(400, 400);
  rectMode(CENTER);
  angleMode(DEGREES);
  textAlign(CENTER, CENTER);
  buttons.left = new Button('left', 0, -110, 400, 180, 'white');
  buttons.pause = new Button('pause', -100, 0, 200, 40, 'white');
  buttons.edit = new Button('edit', 100, 0, 200, 40, 'white');
  return buttons.right = new Button('right', 0, 110, 400, 180, 'white');
};

draw = function() {
  background('black');
  rotate(90);
  translate(200, -200);
  buttons.pause.draw();
  buttons.edit.draw();
  buttons.right.draw();
  push();
  rotate(180);
  translate(0, 220);
  buttons.left.draw();
  return pop();
};

mouseClicked = function() {
  var button, key, results, x, y;
  ({x, y} = getLocalCoords());
  console.log(x, y);
  results = [];
  for (key in buttons) {
    button = buttons[key];
    if (button.inside(x, y)) {
      results.push(console.log('Clicked', key, x, y));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

Button = class Button {
  constructor(text1, x1, y1, w, h, bg) {
    this.text = text1;
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.bg = bg;
  }

  draw() {
    fill(this.bg);
    rect(this.x, this.y, this.w, this.h);
    fill('black');
    return text(this.text, this.x, this.y);
  }

  inside(x, y) {
    return (this.x - this.w / 2 <= x && x <= this.x + this.w / 2) && (this.y - this.h / 2 <= y && y <= this.y + this.h / 2);
  }

};

mouseMoved = function() {
  var button, key, results, x, y;
  ({x, y} = getLocalCoords());
  results = [];
  for (key in buttons) {
    button = buttons[key];
    results.push(button.bg = button.inside(x, y) ? 'red' : 'white');
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW91c2VUcmFuc2Zvcm0uanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcTW91c2VUcmFuc2Zvcm0uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLE1BQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLGNBQUEsRUFBQSxZQUFBLEVBQUEsVUFBQSxFQUFBOztBQUFBLE9BQUEsR0FBVSxDQUFBLEVBQVY7Ozs7O0FBTUEsY0FBQSxHQUFpQixRQUFBLENBQUEsQ0FBQSxFQUFBO0FBQ2pCLE1BQUEsTUFBQSxFQUFBO0VBQUMsTUFBQSxHQUFTLGNBQWMsQ0FBQyxZQUFmLENBQUE7RUFDVCxFQUFBLEdBQUssWUFBQSxDQUFBO1NBQ0wsTUFBTSxDQUFDLE9BQVAsQ0FBQSxDQUFnQixDQUFDLGNBQWpCLENBQWdDLElBQUksUUFBSixDQUFhLE1BQUEsR0FBUyxFQUF0QixFQUF5QixNQUFBLEdBQVMsRUFBbEMsQ0FBaEM7QUFIZ0I7O0FBS2pCLEtBQUEsR0FBUSxRQUFBLENBQUEsQ0FBQTtBQUNSLE1BQUE7RUFBQyxNQUFBLEdBQVMsWUFBQSxDQUFhLEdBQWIsRUFBaUIsR0FBakI7RUFDVCxRQUFBLENBQVMsTUFBVDtFQUNBLFNBQUEsQ0FBVSxPQUFWO0VBQ0EsU0FBQSxDQUFVLE1BQVYsRUFBaUIsTUFBakI7RUFDQSxPQUFPLENBQUMsSUFBUixHQUFlLElBQUksTUFBSixDQUFXLE1BQVgsRUFBa0IsQ0FBbEIsRUFBb0IsQ0FBQyxHQUFyQixFQUF5QixHQUF6QixFQUE2QixHQUE3QixFQUFpQyxPQUFqQztFQUNmLE9BQU8sQ0FBQyxLQUFSLEdBQWdCLElBQUksTUFBSixDQUFXLE9BQVgsRUFBbUIsQ0FBQyxHQUFwQixFQUF3QixDQUF4QixFQUEwQixHQUExQixFQUE4QixFQUE5QixFQUFpQyxPQUFqQztFQUNoQixPQUFPLENBQUMsSUFBUixHQUFlLElBQUksTUFBSixDQUFXLE1BQVgsRUFBa0IsR0FBbEIsRUFBc0IsQ0FB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LENBQWMsQ0FBZCxFQUFpQixDQUFqQixDQUFILEdBQTRCLEtBQTVCLEdBQXVDO0VBRnBELENBQUE7O0FBRlkiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25zID0ge31cclxuXHJcbiMgTMO2c2VyIHByb2JsZW1ldCEgVHJhbnNmb3JtZXJpbmdhciBiZWjDtnZlciBpbnRlIHNrw7Z0YXMhXHJcbiMgQWx0ZXJuYXRpdiBzb20gZnVuZ2VyYXIgbGlrYSBicmEsIG1lbiBrcsOkdmVyIG1lciBrb2QuXHJcbiMgaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL3A1anMvY29tbWVudHMvam83dWNmL2NsaWNraW5nX29uX2FfdHJhbnNsYXRlZF9zY2FsZWRfYW5kX3JvdGF0ZWRfc2hhcGUvXHJcblxyXG5nZXRMb2NhbENvb3JkcyA9IC0+ICMgdGFyIDMgbWljcm9zZWt1bmRlclxyXG5cdG1hdHJpeCA9IGRyYXdpbmdDb250ZXh0LmdldFRyYW5zZm9ybSgpXHJcblx0cGQgPSBwaXhlbERlbnNpdHkoKVxyXG5cdG1hdHJpeC5pbnZlcnNlKCkudHJhbnNmb3JtUG9pbnQgbmV3IERPTVBvaW50IG1vdXNlWCAqIHBkLG1vdXNlWSAqIHBkXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y2FudmFzID0gY3JlYXRlQ2FudmFzIDQwMCw0MDBcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHRhbmdsZU1vZGUgREVHUkVFU1xyXG5cdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblx0YnV0dG9ucy5sZWZ0ID0gbmV3IEJ1dHRvbiAnbGVmdCcsMCwtMTEwLDQwMCwxODAsJ3doaXRlJ1xyXG5cdGJ1dHRvbnMucGF1c2UgPSBuZXcgQnV0dG9uICdwYXVzZScsLTEwMCwwLDIwMCw0MCwnd2hpdGUnXHJcblx0YnV0dG9ucy5lZGl0ID0gbmV3IEJ1dHRvbiAnZWRpdCcsMTAwLDAsMjAwLDQwLCd3aGl0ZSdcclxuXHRidXR0b25zLnJpZ2h0ID0gbmV3IEJ1dHRvbiAncmlnaHQnLDAsMTEwLDQwMCwxODAsJ3doaXRlJ1xyXG5cclxuZHJhdyA9IC0+IFxyXG5cdGJhY2tncm91bmQgJ2JsYWNrJ1xyXG5cclxuXHRyb3RhdGUgOTBcclxuXHR0cmFuc2xhdGUgMjAwLC0yMDBcclxuXHRidXR0b25zLnBhdXNlLmRyYXcoKVxyXG5cdGJ1dHRvbnMuZWRpdC5kcmF3KClcclxuXHRidXR0b25zLnJpZ2h0LmRyYXcoKVxyXG5cdHB1c2goKVxyXG5cdHJvdGF0ZSAxODBcclxuXHR0cmFuc2xhdGUgMCwyMjBcclxuXHRidXR0b25zLmxlZnQuZHJhdygpXHJcblx0cG9wKClcclxuXHJcbm1vdXNlQ2xpY2tlZCA9IC0+XHJcblx0e3gseX0gPSBnZXRMb2NhbENvb3JkcygpXHJcblx0Y29uc29sZS5sb2cgeCx5XHJcblx0Zm9yIGtleSBvZiBidXR0b25zXHJcblx0XHRidXR0b24gPSBidXR0b25zW2tleV1cclxuXHRcdGlmIGJ1dHRvbi5pbnNpZGUoeCx5KSB0aGVuIGNvbnNvbGUubG9nICdDbGlja2VkJyxrZXkseCx5XHJcblxyXG5jbGFzcyBCdXR0b25cclxuXHRjb25zdHJ1Y3RvciA6IChAdGV4dCxAeCxAeSxAdyxAaCxAYmcpIC0+XHJcblx0ZHJhdyA6IC0+XHJcblx0XHRmaWxsIEBiZ1xyXG5cdFx0cmVjdCBAeCxAeSxAdyxAaFxyXG5cdFx0ZmlsbCAnYmxhY2snXHJcblx0XHR0ZXh0IEB0ZXh0LEB4LEB5XHJcblx0aW5zaWRlIDogKHgseSkgLT5cclxuXHRcdEB4LUB3LzIgPD0geCA8PSBAeCtAdy8yIGFuZCBAeS1AaC8yIDw9IHkgPD0gQHkrQGgvMlxyXG5cclxubW91c2VNb3ZlZCA9IC0+XHJcblx0e3gseX0gPSBnZXRMb2NhbENvb3JkcygpXHJcblx0Zm9yIGtleSBvZiBidXR0b25zXHJcblx0XHRidXR0b24gPSBidXR0b25zW2tleV1cclxuXHRcdGJ1dHRvbi5iZyA9IGlmIGJ1dHRvbi5pbnNpZGUoeCwgeSkgdGhlbiAncmVkJyBlbHNlICd3aGl0ZSciXX0=
//# sourceURL=c:\github\Transformer\coffee\MouseTransform.coffee
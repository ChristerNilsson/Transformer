// Generated by CoffeeScript 2.5.1
var Button, buttons, draw, getLocalCoords, mouseClicked, mouseMoved, setup;

buttons = [];

// Löser problemet! Transformeringar behöver inte skötas!
// Alternativ som fungerar lika bra, men kräver mer kod.
// https://www.reddit.com/r/p5js/comments/jo7ucf/clicking_on_a_translated_scaled_and_rotated_shape/
getLocalCoords = function() { // tar 3 microsekunder
  var matrix;
  matrix = drawingContext.getTransform();
  return matrix.inverse().transformPoint(new DOMPoint(mouseX * pixelDensity(), mouseY * pixelDensity()));
};

setup = function() {
  var canvas;
  canvas = createCanvas(400, 400);
  rectMode(CENTER);
  angleMode(DEGREES);
  buttons.push(new Button(0, 0, 100, 100, 'white'));
  return buttons.push(new Button(100, 100, 50, 50, 'white'));
};

draw = function() {
  var button, i, len, results;
  background('black');
  translate(200, 200);
  rotate(45);
  translate(-20, -20);
  scale(2);
  translate(-20, -20);
  rotate(5);
  results = [];
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    results.push(button.draw());
  }
  return results;
};

mouseClicked = function() {
  var button, i, len, p, results;
  p = getLocalCoords();
  results = [];
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    if (button.inside(p.x, p.y)) {
      results.push(console.log('Clicked', p.x, p.y));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

Button = class Button {
  constructor(x1, y1, w, h, bg) {
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.bg = bg;
  }

  draw() {
    fill(this.bg);
    return rect(this.x, this.y, this.w, this.h);
  }

  inside(x, y) {
    return (this.x - this.w / 2 <= x && x <= this.x + this.w / 2) && (this.y - this.h / 2 <= y && y <= this.y + this.h / 2);
  }

};

mouseMoved = function() {
  var button, i, len, p, results;
  p = getLocalCoords();
  results = [];
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    results.push(button.bg = button.inside(p.x, p.y) ? 'red' : 'white');
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW91c2VUcmFuc2Zvcm0uanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcTW91c2VUcmFuc2Zvcm0uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLE1BQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLGNBQUEsRUFBQSxZQUFBLEVBQUEsVUFBQSxFQUFBOztBQUFBLE9BQUEsR0FBVSxHQUFWOzs7OztBQU1BLGNBQUEsR0FBaUIsUUFBQSxDQUFBLENBQUEsRUFBQTtBQUNqQixNQUFBO0VBQUMsTUFBQSxHQUFTLGNBQWMsQ0FBQyxZQUFmLENBQUE7U0FDVCxNQUFNLENBQUMsT0FBUCxDQUFBLENBQ0MsQ0FBQyxjQURGLENBQ2lCLElBQUksUUFBSixDQUFhLE1BQUEsR0FBUyxZQUFBLENBQUEsQ0FBdEIsRUFBcUMsTUFBQSxHQUFTLFlBQUEsQ0FBQSxDQUE5QyxDQURqQjtBQUZnQjs7QUFLakIsS0FBQSxHQUFRLFFBQUEsQ0FBQSxDQUFBO0FBQ1IsTUFBQTtFQUFDLE1BQUEsR0FBUyxZQUFBLENBQWEsR0FBYixFQUFpQixHQUFqQjtFQUNULFFBQUEsQ0FBUyxNQUFUO0VBQ0EsU0FBQSxDQUFVLE9BQVY7RUFDQSxPQUFPLENBQUMsSUFBUixDQUFhLElBQUksTUFBSixDQUFXLENBQVgsRUFBYSxDQUFiLEVBQWUsR0FBZixFQUFtQixHQUFuQixFQUF1QixPQUF2QixDQUFiO1NBQ0EsT0FBTyxDQUFDLElBQVIsQ0FBYSxJQUFJLE1BQUosQ0FBVyxHQUFYLEVBQWUsR0FBZixFQUFtQixFQUFuQixFQUFzQixFQUF0QixFQUF5QixPQUF6QixDQUFiO0FBTE87O0FBT1IsSUFBQSxHQUFPLFFBQUEsQ0FBQSxDQUFBO0FBQ1AsTUFBQSxNQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQTtFQUFDLFVBQUEsQ0FBVyxPQUFYO0VBRUEsU0FBQSxDQUFVLEdBQVYsRUFBYyxHQUFkO0VBQ0EsTUFBQSxDQUFPLEVBQVA7RUFDQSxTQUFBLENBQVUsQ0FBQyxFQUFYLEVBQWMsQ0FBQyxFQUFmO0VBQ0EsS0FBQSxDQUFNLENBQU47RUFDQSxTQUFBLENBQVUsQ0FBQyxFQUFYLEVBQWMsQ0FBQyxFQUFmO0VBQ0EsTUFBQSxDQUFPLENBQVA7QUFDQTtFQUFBLEtBQUEseUNBQUE7O2lCQUNDLE1BQU0sQ0FBQyxJQUFQLENBQUE7RUFERCxDQUFBOztBQVRNOztBQVlQLFlBQUEsR0FBZSxRQUFBLENBQUEsQ0FBQTtBQUNmLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBO0VBQUMsQ0FBQSxHQUFJLGNBQUEsQ0FBQTtBQUNKO0VBQUEsS0FBQSx5Q0FBQTs7SUFDQyxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsQ0FBQyxDQUFDLENBQWhCLEVBQWtCLENBQUMsQ0FBQyxDQUFwQixDQUFIO21CQUErQixPQUFPLENBQUMsR0FBUixDQUFZLFNBQVosRUFBc0IsQ0FBQyxDQUFDLENBQXhCLEVBQTBCLENBQUMsQ0FBQyxDQUE1QixHQUEvQjtLQUFBLE1BQUE7MkJBQUE7O0VBREQsQ0FBQTs7QUFGYzs7QUFLVCxTQUFOLE1BQUEsT0FBQTtFQUNDLFdBQWMsR0FBQSxJQUFBLEdBQUEsR0FBQSxJQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7RUFBZDs7RUFDZCxJQUFPLENBQUEsQ0FBQTtJQUNOLElBQUEsQ0FBSyxJQUFDLENBQUEsRUFBTjtXQUNBLElBQUEsQ0FBSyxJQUFDLENBQUEsQ0FBTixFQUFRLElBQUMsQ0FBQSxDQUFULEVBQVcsSUFBQyxDQUFBLENBQVosRUFBYyxJQUFDLENBQUEsQ0FBZjtFQUZNOztFQUdQLE1BQVMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBO1dBQ1IsQ0FBQSxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBTixJQUFXLENBQVgsSUFBVyxDQUFYLElBQWdCLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUF0QixDQUFBLElBQTRCLENBQUEsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQU4sSUFBVyxDQUFYLElBQVcsQ0FBWCxJQUFnQixJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBdEI7RUFEcEI7O0FBTFY7O0FBUUEsVUFBQSxHQUFhLFFBQUEsQ0FBQSxDQUFBO0FBQ2IsTUFBQSxNQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUE7RUFBQyxDQUFBLEdBQUksY0FBQSxDQUFBO0FBQ0o7RUFBQSxLQUFBLHlDQUFBOztpQkFDQyxNQUFNLENBQUMsRUFBUCxHQUFlLE1BQU0sQ0FBQyxNQUFQLENBQWMsQ0FBQyxDQUFDLENBQWhCLEVBQW1CLENBQUMsQ0FBQyxDQUFyQixDQUFILEdBQWdDLEtBQWhDLEdBQTJDO0VBRHhELENBQUE7O0FBRlkiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25zID0gW11cclxuXHJcbiMgTMO2c2VyIHByb2JsZW1ldCEgVHJhbnNmb3JtZXJpbmdhciBiZWjDtnZlciBpbnRlIHNrw7Z0YXMhXHJcbiMgQWx0ZXJuYXRpdiBzb20gZnVuZ2VyYXIgbGlrYSBicmEsIG1lbiBrcsOkdmVyIG1lciBrb2QuXHJcbiMgaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL3A1anMvY29tbWVudHMvam83dWNmL2NsaWNraW5nX29uX2FfdHJhbnNsYXRlZF9zY2FsZWRfYW5kX3JvdGF0ZWRfc2hhcGUvXHJcblxyXG5nZXRMb2NhbENvb3JkcyA9IC0+ICMgdGFyIDMgbWljcm9zZWt1bmRlclxyXG5cdG1hdHJpeCA9IGRyYXdpbmdDb250ZXh0LmdldFRyYW5zZm9ybSgpXHJcblx0bWF0cml4LmludmVyc2UoKVxyXG5cdFx0LnRyYW5zZm9ybVBvaW50KG5ldyBET01Qb2ludChtb3VzZVggKiBwaXhlbERlbnNpdHkoKSxtb3VzZVkgKiBwaXhlbERlbnNpdHkoKSkpXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y2FudmFzID0gY3JlYXRlQ2FudmFzIDQwMCw0MDBcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHRhbmdsZU1vZGUgREVHUkVFU1xyXG5cdGJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uIDAsMCwxMDAsMTAwLCd3aGl0ZSdcclxuXHRidXR0b25zLnB1c2ggbmV3IEJ1dHRvbiAxMDAsMTAwLDUwLDUwLCd3aGl0ZSdcclxuXHJcbmRyYXcgPSAtPiBcclxuXHRiYWNrZ3JvdW5kICdibGFjaydcclxuXHJcblx0dHJhbnNsYXRlIDIwMCwyMDBcclxuXHRyb3RhdGUgNDVcclxuXHR0cmFuc2xhdGUgLTIwLC0yMFxyXG5cdHNjYWxlIDJcclxuXHR0cmFuc2xhdGUgLTIwLC0yMFxyXG5cdHJvdGF0ZSA1XHJcblx0Zm9yIGJ1dHRvbiBpbiBidXR0b25zXHJcblx0XHRidXR0b24uZHJhdygpXHJcblxyXG5tb3VzZUNsaWNrZWQgPSAtPlxyXG5cdHAgPSBnZXRMb2NhbENvb3JkcygpXHJcblx0Zm9yIGJ1dHRvbiBpbiBidXR0b25zXHJcblx0XHRpZiBidXR0b24uaW5zaWRlKHAueCxwLnkpIHRoZW4gY29uc29sZS5sb2cgJ0NsaWNrZWQnLHAueCxwLnlcclxuXHJcbmNsYXNzIEJ1dHRvblxyXG5cdGNvbnN0cnVjdG9yIDogKEB4LEB5LEB3LEBoLEBiZykgLT5cclxuXHRkcmF3IDogLT5cclxuXHRcdGZpbGwgQGJnXHJcblx0XHRyZWN0IEB4LEB5LEB3LEBoXHJcblx0aW5zaWRlIDogKHgseSkgLT5cclxuXHRcdEB4LUB3LzIgPD0geCA8PSBAeCtAdy8yIGFuZCBAeS1AaC8yIDw9IHkgPD0gQHkrQGgvMlxyXG5cclxubW91c2VNb3ZlZCA9IC0+XHJcblx0cCA9IGdldExvY2FsQ29vcmRzKClcclxuXHRmb3IgYnV0dG9uIGluIGJ1dHRvbnNcclxuXHRcdGJ1dHRvbi5iZyA9IGlmIGJ1dHRvbi5pbnNpZGUocC54LCBwLnkpIHRoZW4gJ3JlZCcgZWxzZSAnd2hpdGUnIl19
//# sourceURL=c:\github\Transformer\coffee\MouseTransform.coffee
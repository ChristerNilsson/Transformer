// Generated by CoffeeScript 2.5.1
var Button, buttons, draw, getLocalCoords, mouseClicked, mouseMoved, setup;

buttons = [];

// Löser problemet! Transformeringar behöver inte skötas!
// Alternativ som fungerar lika bra, men kräver mer kod.
// https://www.reddit.com/r/p5js/comments/jo7ucf/clicking_on_a_translated_scaled_and_rotated_shape/
getLocalCoords = function() { // tar 3 microsekunder
  var matrix, pd;
  matrix = drawingContext.getTransform();
  pd = pixelDensity();
  return matrix.inverse().transformPoint(new DOMPoint(mouseX * pd, mouseY * pd));
};

setup = function() {
  var canvas;
  canvas = createCanvas(400, 400);
  rectMode(CENTER);
  angleMode(DEGREES);
  buttons.push(new Button(0, 0, 100, 100, 'white'));
  return buttons.push(new Button(100, 100, 50, 50, 'white'));
};

draw = function() {
  var button, i, len, results;
  background('black');
  translate(200, 200);
  rotate(45);
  translate(-20, -20);
  scale(2);
  translate(-20, -20);
  rotate(5);
  results = [];
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    results.push(button.draw());
  }
  return results;
};

mouseClicked = function() {
  var button, i, len, results, x, y;
  ({x, y} = getLocalCoords());
  results = [];
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    if (button.inside(x, y)) {
      results.push(console.log('Clicked', x, y));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

Button = class Button {
  constructor(x1, y1, w, h, bg) {
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.bg = bg;
  }

  draw() {
    fill(this.bg);
    return rect(this.x, this.y, this.w, this.h);
  }

  inside(x, y) {
    return (this.x - this.w / 2 <= x && x <= this.x + this.w / 2) && (this.y - this.h / 2 <= y && y <= this.y + this.h / 2);
  }

};

mouseMoved = function() {
  var button, i, len, results, x, y;
  ({x, y} = getLocalCoords());
  results = [];
  for (i = 0, len = buttons.length; i < len; i++) {
    button = buttons[i];
    results.push(button.bg = button.inside(x, y) ? 'red' : 'white');
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW91c2VUcmFuc2Zvcm0uanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcTW91c2VUcmFuc2Zvcm0uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLE1BQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLGNBQUEsRUFBQSxZQUFBLEVBQUEsVUFBQSxFQUFBOztBQUFBLE9BQUEsR0FBVSxHQUFWOzs7OztBQU1BLGNBQUEsR0FBaUIsUUFBQSxDQUFBLENBQUEsRUFBQTtBQUNqQixNQUFBLE1BQUEsRUFBQTtFQUFDLE1BQUEsR0FBUyxjQUFjLENBQUMsWUFBZixDQUFBO0VBQ1QsRUFBQSxHQUFLLFlBQUEsQ0FBQTtTQUNMLE1BQU0sQ0FBQyxPQUFQLENBQUEsQ0FBZ0IsQ0FBQyxjQUFqQixDQUFnQyxJQUFJLFFBQUosQ0FBYSxNQUFBLEdBQVMsRUFBdEIsRUFBeUIsTUFBQSxHQUFTLEVBQWxDLENBQWhDO0FBSGdCOztBQUtqQixLQUFBLEdBQVEsUUFBQSxDQUFBLENBQUE7QUFDUixNQUFBO0VBQUMsTUFBQSxHQUFTLFlBQUEsQ0FBYSxHQUFiLEVBQWlCLEdBQWpCO0VBQ1QsUUFBQSxDQUFTLE1BQVQ7RUFDQSxTQUFBLENBQVUsT0FBVjtFQUNBLE9BQU8sQ0FBQyxJQUFSLENBQWEsSUFBSSxNQUFKLENBQVcsQ0FBWCxFQUFhLENBQWIsRUFBZSxHQUFmLEVBQW1CLEdBQW5CLEVBQXVCLE9BQXZCLENBQWI7U0FDQSxPQUFPLENBQUMsSUFBUixDQUFhLElBQUksTUFBSixDQUFXLEdBQVgsRUFBZSxHQUFmLEVBQW1CLEVBQW5CLEVBQXNCLEVBQXRCLEVBQXlCLE9BQXpCLENBQWI7QUFMTzs7QUFPUixJQUFBLEdBQU8sUUFBQSxDQUFBLENBQUE7QUFDUCxNQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBO0VBQUMsVUFBQSxDQUFXLE9BQVg7RUFFQSxTQUFBLENBQVUsR0FBVixFQUFjLEdBQWQ7RUFDQSxNQUFBLENBQU8sRUFBUDtFQUNBLFNBQUEsQ0FBVSxDQUFDLEVBQVgsRUFBYyxDQUFDLEVBQWY7RUFDQSxLQUFBLENBQU0sQ0FBTjtFQUNBLFNBQUEsQ0FBVSxDQUFDLEVBQVgsRUFBYyxDQUFDLEVBQWY7RUFDQSxNQUFBLENBQU8sQ0FBUDtBQUNBO0VBQUEsS0FBQSx5Q0FBQTs7aUJBQ0MsTUFBTSxDQUFDLElBQVAsQ0FBQTtFQURELENBQUE7O0FBVE07O0FBWVAsWUFBQSxHQUFlLFFBQUEsQ0FBQSxDQUFBO0FBQ2YsTUFBQSxNQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxPQUFBLEVBQUEsQ0FBQSxFQUFBO0VBQUMsQ0FBQSxDQUFDLENBQUQsRUFBRyxDQUFILENBQUEsR0FBUSxjQUFBLENBQUEsQ0FBUjtBQUNBO0VBQUEsS0FBQSx5Q0FBQTs7SUFDQyxJQUFHLE1BQU0sQ0FBQyxNQUFQLENBQWMsQ0FBZCxFQUFnQixDQUFoQixDQUFIO21CQUEyQixPQUFPLENBQUMsR0FBUixDQUFZLFNBQVosRUFBc0IsQ0FBdEIsRUFBd0IsQ0FBeEIsR0FBM0I7S0FBQSxNQUFBOzJCQUFBOztFQURELENBQUE7O0FBRmM7O0FBS1QsU0FBTixNQUFBLE9BQUE7RUFDQyxXQUFjLEdBQUEsSUFBQSxHQUFBLEdBQUEsSUFBQSxDQUFBO0lBQUMsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0VBQWQ7O0VBQ2QsSUFBTyxDQUFBLENBQUE7SUFDTixJQUFBLENBQUssSUFBQyxDQUFBLEVBQU47V0FDQSxJQUFBLENBQUssSUFBQyxDQUFBLENBQU4sRUFBUSxJQUFDLENBQUEsQ0FBVCxFQUFXLElBQUMsQ0FBQSxDQUFaLEVBQWMsSUFBQyxDQUFBLENBQWY7RUFGTTs7RUFHUCxNQUFTLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtXQUNSLENBQUEsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQU4sSUFBVyxDQUFYLElBQVcsQ0FBWCxJQUFnQixJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBdEIsQ0FBQSxJQUE0QixDQUFBLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFOLElBQVcsQ0FBWCxJQUFXLENBQVgsSUFBZ0IsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQXRCO0VBRHBCOztBQUxWOztBQVFBLFVBQUEsR0FBYSxRQUFBLENBQUEsQ0FBQTtBQUNiLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLENBQUEsRUFBQTtFQUFDLENBQUEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBLEdBQVEsY0FBQSxDQUFBLENBQVI7QUFDQTtFQUFBLEtBQUEseUNBQUE7O2lCQUNDLE1BQU0sQ0FBQyxFQUFQLEdBQWUsTUFBTSxDQUFDLE1BQVAsQ0FBYyxDQUFkLEVBQWlCLENBQWpCLENBQUgsR0FBNEIsS0FBNUIsR0FBdUM7RUFEcEQsQ0FBQTs7QUFGWSIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbnMgPSBbXVxyXG5cclxuIyBMw7ZzZXIgcHJvYmxlbWV0ISBUcmFuc2Zvcm1lcmluZ2FyIGJlaMO2dmVyIGludGUgc2vDtnRhcyFcclxuIyBBbHRlcm5hdGl2IHNvbSBmdW5nZXJhciBsaWthIGJyYSwgbWVuIGtyw6R2ZXIgbWVyIGtvZC5cclxuIyBodHRwczovL3d3dy5yZWRkaXQuY29tL3IvcDVqcy9jb21tZW50cy9qbzd1Y2YvY2xpY2tpbmdfb25fYV90cmFuc2xhdGVkX3NjYWxlZF9hbmRfcm90YXRlZF9zaGFwZS9cclxuXHJcbmdldExvY2FsQ29vcmRzID0gLT4gIyB0YXIgMyBtaWNyb3Nla3VuZGVyXHJcblx0bWF0cml4ID0gZHJhd2luZ0NvbnRleHQuZ2V0VHJhbnNmb3JtKClcclxuXHRwZCA9IHBpeGVsRGVuc2l0eSgpXHJcblx0bWF0cml4LmludmVyc2UoKS50cmFuc2Zvcm1Qb2ludCBuZXcgRE9NUG9pbnQgbW91c2VYICogcGQsbW91c2VZICogcGRcclxuXHJcbnNldHVwID0gLT5cclxuXHRjYW52YXMgPSBjcmVhdGVDYW52YXMgNDAwLDQwMFxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cdGFuZ2xlTW9kZSBERUdSRUVTXHJcblx0YnV0dG9ucy5wdXNoIG5ldyBCdXR0b24gMCwwLDEwMCwxMDAsJ3doaXRlJ1xyXG5cdGJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uIDEwMCwxMDAsNTAsNTAsJ3doaXRlJ1xyXG5cclxuZHJhdyA9IC0+IFxyXG5cdGJhY2tncm91bmQgJ2JsYWNrJ1xyXG5cclxuXHR0cmFuc2xhdGUgMjAwLDIwMFxyXG5cdHJvdGF0ZSA0NVxyXG5cdHRyYW5zbGF0ZSAtMjAsLTIwXHJcblx0c2NhbGUgMlxyXG5cdHRyYW5zbGF0ZSAtMjAsLTIwXHJcblx0cm90YXRlIDVcclxuXHRmb3IgYnV0dG9uIGluIGJ1dHRvbnNcclxuXHRcdGJ1dHRvbi5kcmF3KClcclxuXHJcbm1vdXNlQ2xpY2tlZCA9IC0+XHJcblx0e3gseX0gPSBnZXRMb2NhbENvb3JkcygpXHJcblx0Zm9yIGJ1dHRvbiBpbiBidXR0b25zXHJcblx0XHRpZiBidXR0b24uaW5zaWRlKHgseSkgdGhlbiBjb25zb2xlLmxvZyAnQ2xpY2tlZCcseCx5XHJcblxyXG5jbGFzcyBCdXR0b25cclxuXHRjb25zdHJ1Y3RvciA6IChAeCxAeSxAdyxAaCxAYmcpIC0+XHJcblx0ZHJhdyA6IC0+XHJcblx0XHRmaWxsIEBiZ1xyXG5cdFx0cmVjdCBAeCxAeSxAdyxAaFxyXG5cdGluc2lkZSA6ICh4LHkpIC0+XHJcblx0XHRAeC1Ady8yIDw9IHggPD0gQHgrQHcvMiBhbmQgQHktQGgvMiA8PSB5IDw9IEB5K0BoLzJcclxuXHJcbm1vdXNlTW92ZWQgPSAtPlxyXG5cdHt4LHl9ID0gZ2V0TG9jYWxDb29yZHMoKVxyXG5cdGZvciBidXR0b24gaW4gYnV0dG9uc1xyXG5cdFx0YnV0dG9uLmJnID0gaWYgYnV0dG9uLmluc2lkZSh4LCB5KSB0aGVuICdyZWQnIGVsc2UgJ3doaXRlJyJdfQ==
//# sourceURL=c:\github\Transformer\coffee\MouseTransform.coffee